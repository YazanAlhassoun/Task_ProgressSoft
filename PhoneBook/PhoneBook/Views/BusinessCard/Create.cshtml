@model PhoneBook.Models.BusinessCard

@{
    ViewBag.Title = "Create";
}

<div id="contact" class="contact-us section">
    <div class="container">
        <div class="row">

            <div class="col-lg-12 wow fadeInUp" data-wow-duration="0.5s" data-wow-delay="0.25s">




                @using (Html.BeginForm("Create", "BusinessCard", FormMethod.Post, new { encType = "multipart/form-data", @id = "contact" }))
                {
                    @Html.AntiForgeryToken()


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="col-lg-10 row offset-lg-3">
                        <div class="section-heading">
                            <h2>Please Fill Out The  <em>Form</em> Below &nbsp; <i class="fas fa-arrow-down"></i></h2>
                            <br /><br />
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-8">
                            <div class="row">

                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Name, new { @class = "lbl" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                    <br />
                                </div>


                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Email, new { @class = "lbl" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "example@xxx.com" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                    <br />
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Gender, new { @class = "lbl" })
                                    <div class="row">
                                        <div class="col-md-5">Male @Html.RadioButtonFor(model => model.Gender, "Male") </div>
                                        <div class="col-md-5">Female @Html.RadioButtonFor(model => model.Gender, "Female") </div>
                                    </div>
                                    <div class=" col-md-10">
                                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                    </div>
                                    <br />
                                </div>


                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.DateOfBirth, new { @class = "lbl" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })

                                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <br />
                            </div>

                            <div class="row">
                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Phone, new { @class = "lbl" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = " with 00962" } })
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                    </div>
                                    <br />
                                </div>


                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Address, new { @class = "lbl", lable = "*" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                    <br />
                                </div>
                            </div>
                        </div>



                        <div class="col-md-4">
                            <div class="row">
                                <div class="col-md-12">
                                     @Html.LabelFor(model => model.Photo, new { @class = "lbl" })
                                    <div class="col-md-10">
                                        <div class="avatar-upload ">
                                            <div class="avatar-edit">
                                                <input type='file' name="ImageFile" id="imageUpload" />
                                                <label for="imageUpload"><i class="fas fa-upload" style="color:white !important; margin-top:12px; margin-left:2px"></i> </label>
                                            </div>

                                            <div class="avatar-preview">
                                                <div id="imagePreview" style="background-image: url('../../Content/upload.png'); margin-right:5px;">
                                                </div>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-lg-12">
                                <fieldset>
                                
                                    <button type="submit" id="form-submit" class="main-button ">Add to phone book</button>
                                  
                                </fieldset>
                            </div>

                           
                            <div>
                                <br />
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-info" })

                            </div>
                        </div>


                        @if (ViewBag.message != null)
                        {
                            <div class="alert alert-danger">

                                <h3>@ViewBag.message</h3>

                            </div>
                        }

                        <div class="alert alert-danger" id="error-div" style="display:none;">
                            <h3 id="view-error1">
                            </h3>

                            <h3 id="view-error2">
                            </h3>
                        </div>

                    </div>

                }

            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview').css('background-image', 'url(' + e.target.result + ')');
                    $('#imagePreview').hide();
                    $('#imagePreview').fadeIn(650);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
        $("#imageUpload").change(function () {
            readURL(this);
        });


        $(function () {
            $("#form-submit").click(function () {

                if ($("#imageUpload").val() != "") {

                    //check if img extintion is valid
                    var FileName = document.getElementById("imageUpload").value;
                    var ExtentionImg = FileName.substr(FileName.lastIndexOf('.') + 1);
                    var ValidExtentions = ['jpg', 'png', 'gif', 'bmp'];

                    if ($.inArray(ExtentionImg, ValidExtentions) == -1) {
                        $("#error-div").fadeIn();
                        $("#view-error1").append("<li> Please choose an image with a valid extension..! jpg, png, gif, bmp</li>");
                        return false;
                    }


                    //check if img size is valid(1 mb)
                    var MyFileSize = document.getElementById("imageUpload").files[0].size / 1024 / 1024;
                    if (MyFileSize > 1) {
                        $("#error-div").fadeIn();
                        $("#view-error2").append("<li> Please choose an image size of 1MB ..!</li>");
                        return false;
                    }

                }


            });
        });

    </script>
}
